@page "/topics/create"
@using Microsoft.EntityFrameworkCore
@using BlazorAppDemo.Models
@inject IDbContextFactory<BlazorAppDemo.Data.BlazorAppDemoContext> DbFactory
@inject NavigationManager NavigationManager

<PageTitle>Create</PageTitle>

<h1>Create</h1>

<h2>Topic</h2>
<hr />
<div class="row">
    <div class="col-md-4">
        <EditForm method="post" Model="Topic" OnValidSubmit="AddTopic" FormName="create" Enhance>
            <DataAnnotationsValidator />
            <ValidationSummary class="text-danger" />
            <div class="mb-3">
                <label for="title" class="form-label">Title:</label> 
                <InputText id="title" @bind-Value="Topic.Title" class="form-control" /> 
                <ValidationMessage For="() => Topic.Title" class="text-danger" /> 
            </div>        
            <div class="mb-3">
                <label for="description" class="form-label">Description:</label> 
                <InputText id="description" @bind-Value="Topic.Description" class="form-control" /> 
                <ValidationMessage For="() => Topic.Description" class="text-danger" /> 
            </div>        
            <div class="mb-3">
                <label for="author" class="form-label">Author:</label> 
                <InputText id="author" @bind-Value="Topic.Author" class="form-control" /> 
                <ValidationMessage For="() => Topic.Author" class="text-danger" /> 
            </div>        
            <div class="mb-3">
                <label for="publishdate" class="form-label">PublishDate:</label> 
                <InputDate id="publishdate" @bind-Value="Topic.PublishDate" class="form-control" /> 
                <ValidationMessage For="() => Topic.PublishDate" class="text-danger" /> 
            </div>        
            <div class="mb-3">
                <label for="link" class="form-label">Link:</label> 
                <InputText id="link" @bind-Value="Topic.Link" class="form-control" /> 
                <ValidationMessage For="() => Topic.Link" class="text-danger" /> 
            </div>        
            <button type="submit" class="btn btn-primary">Create</button>
        </EditForm>
    </div>
</div>

<div>
    <a href="/topics">Back to List</a>
</div>

@code {
    [SupplyParameterFromForm]
    private Topic Topic { get; set; } = new();

    // To protect from overposting attacks, see https://learn.microsoft.com/aspnet/core/blazor/forms/#mitigate-overposting-attacks.
    private async Task AddTopic()
    {
        using var context = DbFactory.CreateDbContext();
        context.Topic.Add(Topic);
        await context.SaveChangesAsync();
        NavigationManager.NavigateTo("/topics");
    }
}
